name: Build Xornet Server

on: [push, pull_request, workflow_dispatch]

env:
  CARGO_TERM_COLOR: always

jobs:
  compile-linux:
    strategy:
      fail-fast: true
      matrix: 
        targetArch:
          - 386
          - amd64
          - arm
          - mips
          - mips64
          - mips64le
          - mipsle
          - s390x
    runs-on: ubuntu-latest
    name: "Compile for Linux"
    steps: 
      - name: ðŸ›Ž Checkout
        uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.4
        with:
          go-version: '^1.17.1'
      - name: Install Gox
        run: go get github.com/mitchellh/gox
      - name: Compile 
        run: gox -os="linux" -arch="${{matrix.targetArch}}" -output="./dist/xornet_server_${{ cat ./version.txt }}_{{.OS}}_{{.Arch}}"
      - name: ðŸ’Ž Upload Builds
        uses: actions/upload-artifact@v1
        with:
          name: xornet_server_linux_${{matrix.targetArch}}
          path: dist/xornet_server_linux_${{matrix.targetArch}}

  compile-freebsd:
    strategy:
      fail-fast: true
      matrix: 
        targetArch:
          - 386
          - amd64
          - arm
    runs-on: ubuntu-latest
    name: "Compile for FreeBSD"
    steps: 
      - name: ðŸ›Ž Checkout
        uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.4
        with:
          go-version: '^1.17.1'
      - name: Install Gox
        run: go get github.com/mitchellh/gox
      - name: Compile 
        run: gox -os="freebsd" -arch="${{matrix.targetArch}}" -output="./dist/xornet_server_${{ cat ./version.txt }}_{{.OS}}_{{.Arch}}"
      - name: ðŸ’Ž Upload Builds
        uses: actions/upload-artifact@v1
        with:
          name: xornet_server_freebsd_${{matrix.targetArch}}
          path: dist/xornet_server_freebsd_${{matrix.targetArch}}

  compile-netbsd:
    strategy:
      fail-fast: true
      matrix: 
        targetArch:
          - 386
          - amd64
          - arm
    runs-on: ubuntu-latest
    name: "Compile for NetBSD"
    steps: 
      - name: ðŸ›Ž Checkout
        uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.4
        with:
          go-version: '^1.17.1'
      - name: Install Gox
        run: go get github.com/mitchellh/gox
      - name: Compile 
        run: gox -os="netbsd" -arch="${{matrix.targetArch}}" -output="./dist/xornet_server_${{ cat ./version.txt }}_{{.OS}}_{{.Arch}}"
      - name: ðŸ’Ž Upload Builds
        uses: actions/upload-artifact@v1
        with:
          name: xornet_server_netbsd_${{matrix.targetArch}}
          path: dist/xornet_server_netbsd_${{matrix.targetArch}}

  compile-openbsd:
    strategy:
      fail-fast: true
      matrix: 
        targetArch:
          - 386
          - amd64
    runs-on: ubuntu-latest
    name: "Compile for OpenBSD"
    steps: 
      - name: ðŸ›Ž Checkout
        uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.4
        with:
          go-version: '^1.17.1'
      - name: Install Gox
        run: go get github.com/mitchellh/gox
      - name: Compile 
        run: gox -os="openbsd" -arch="${{matrix.targetArch}}" -output="./dist/xornet_server_${{ cat ./version.txt }}_{{.OS}}_{{.Arch}}"
      - name: ðŸ’Ž Upload Builds
        uses: actions/upload-artifact@v1
        with:
          name: xornet_server_openbsd_${{matrix.targetArch}}
          path: dist/xornet_server_openbsd_${{matrix.targetArch}}
  compile-windows:
    strategy:
      fail-fast: true
      matrix: 
        targetArch:
          - 386
          - amd64
    runs-on: ubuntu-latest
    name: "Compile for Windows"
    steps: 
      - name: ðŸ›Ž Checkout
        uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.4
        with:
          go-version: '^1.17.1'
      - name: Install Gox
        run: go get github.com/mitchellh/gox
      - name: Compile 
        run: gox -os="windows" -arch="${{matrix.targetArch}}" -output="./dist/xornet_server_${{ cat ./version.txt }}_{{.OS}}_{{.Arch}}"
      - name: ðŸ’Ž Upload Builds
        uses: actions/upload-artifact@v1
        with:
          name: xornet_server_windows_${{matrix.targetArch}}
          path: dist/xornet_server_windows_${{matrix.targetArch}}.exe

  compile-darwin:
    runs-on: ubuntu-latest
    name: "Compile for Darwin (amd64)"
    steps: 
      - name: ðŸ›Ž Checkout
        uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.4
        with:
          go-version: '^1.17.1'
      - name: Install Gox
        run: go get github.com/mitchellh/gox
      - name: Compile 
        run: gox -os="darwin" -arch="amd64" -output="./dist/xornet_server_${{ cat ./version.txt }}_{{.OS}}_{{.Arch}}"
      - name: ðŸ’Ž Upload Builds
        uses: actions/upload-artifact@v1
        with:
          name: xornet_server_darwin_amd64
          path: dist/xornet_server_darwin_amd64
